openapi: 3.0.0
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: users
    description: Действия с пользователем.
  - name: offers
    description: действия с предложениями об аренде.
  - name: comments
    description: действия с комментариями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        '201':
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '409':
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизация пользователя на основе логина и пароля.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
        required: true

      responses:
        '201':
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '409':
          description: Пользователь с таким email уже существует.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        '200':
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '401':
          description: Пользователь не авторизован. Ошибка доступа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorAuth'

  /users/logout:
    delete:
      tags:
        - users
      summary: Завершение сеанса пользователя
      description: Завершение сеанса пользователя - выход из закрытой части приложения

      responses:
        '204':
          description: Сеанс завершен

  /offers:
    get:
      tags:
        - offers
      summary: Список предложение по аренде
      description: Получение списка предложений.

      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Создание нового предложения. Возвращает объект нового предложения.

      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offerCreation'
        required: true

      responses:
        '201':
          description: Предложение создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Подробная информация о предложении
      description: Возвращает объект с подробной информацией о предложении.

      parameters:
        - in: path
          name: offerId
          description: ID запращиваемого предложения
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Предложение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'

    put:
      tags:
        - offers
      summary: Изменение информации о предложении
      description: Изменение информации о предложении. Возвращает новый объект предложения.
      parameters:
        - in: path
          name: offerId
          description: ID изменяемого предложения
          schema:
            type: string
          required: true
      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offerCreation'
        required: true

      responses:
        '200':
          description: Измененное предложение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'

    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаление предложения пользователя

      responses:
        '204':
          description: Предложение удалено

  /offers/{offerId}/nearby:
    get:
      tags:
        - offers
      summary: Список предложений неподалеку
      description: Возвращает список предложений неподалеку - в текущем городе.

      parameters:
        - in: path
          name: offerId
          description: ID предложения
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'

  /favorite:
    get:
      tags:
        - offers
      summary: Список избранных предложений
      description: Возвращает список избранных предложений авторизованного пользователя.

      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

        '401':
          description: Пользователь не авторизован. Ошибка доступа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorAuth'

  /favorite/add:
    post:
      tags:
        - offers
      summary: Добавление предложения в избранное
      description: Добавление предложения в избранное. Возвращает новый объект предложения.

      requestBody:
        description: Информация для добавления в избранное.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeFavorite'
        required: true

      responses:
        '200':
          description: Обновленное предложение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '401':
          description: Пользователь не авторизован. Ошибка доступа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorAuth'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'

  /favorite/remove:
    post:
      tags:
        - offers
      summary: Удаление предложения из избранного
      description: Удаление предложения из избранного. Возвращает новый объект предложения.

      requestBody:
        description: Информация для добавления в избранное.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeFavorite'
        required: true

      responses:
        '200':
          description: Обновленное предложение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '401':
          description: Пользователь не авторизован. Ошибка доступа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorAuth'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Список комментариев предложения
      description: Возвращает список комментариев предложения с offerId.

      parameters:
        - in: path
          name: offerId
          description: ID предложения
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Массив комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'
  /comments:
    post:
      tags:
        - comments
      summary: Добавление нового комментария
      description: Добавление нового комментария. Возврат объекта комментария

      requestBody:
        description: Информация для создания нового комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commentCreation'
        required: true

      responses:
        '201':
          description: Добавленный комментарий
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

        '404':
          description: Предложение с offerId не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorNotFound'


components:
  schemas:
    createUser:
      type: object
      properties:
        name:
          type: string
          example: Name

        email:
          type: string
          example: email@email.com

        avatar:
          type: string
          example: avatar1.jpg

        password:
          type: string
          example: passw0rd!

    user:
      type: object
      properties:
        id:
          type: string
          example: 6321c3d6504ab1061c6425e5

        name:
          type: string
          example: Name

        email:
          type: string
          example: name@email.com

        avatarUrl:
          type: string
          example: avatar.jpg

        password:
          type: string
          example: passw0rd!

        isPro:
          type: boolean
          example: true

    userLogin:
      type: object
      properties:
        email:
          type: string
          example: name@email.com

        password:
          type: string
          example: passw0rd!

    errorAuth:
      type: object
      properties:
        errorType:
          type: string
          example: 'COMMON_ERROR'

        message:
          type: string
          example: 'Access denied'

    offer:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        title:
          type: string
          example: Cool house

        description:
          type: string
          example: Very cool and spacious house

        createdDate:
          type: string
          example: 2023-10-03T13:40:33.225Z

        city:
          type: object
          properties:
            name:
              type: string
              example: Paris

            lat:
              type: number
              example: 49.87262

            lng:
              type: number
              example: 5.314119

        previewImage:
          type: string
          example: avatar1.jpg

        images:
          type: array
          items:
            type: string
          example: [ offer1.jpg, offer2.jpg, offer3.jpg, offer4.jpg, offer5.jpg, offer6.jpg ]

        isPremium:
          type: boolean
          example: false

        isFavorite:
          type: boolean
          example: true

        rating:
          type: number
          example: 4.9

        type:
          type: string
          example: house

        bedrooms:
          type: number
          example: 3

        maxAdults:
          type: number
          example: 3

        price:
          type: number
          example: 500

        goods:
          type: array
          items:
            type: string
          example: [ Laptop, Washer, Fridge ]

        user:
          $ref: '#/components/schemas/user'

        commentsCount:
          type: number
          example: 1

        location:
          type: object
          properties:
            latitude:
              type: number
              example: 49.87262

            longitude:
              type: number
              example: 5.314119

    offerCreation:
      type: object
      properties:
        title:
          type: string
          example: Cool house

        description:
          type: string
          example: Very cool and spacious house

        createdDate:
          type: string
          example: 2023-10-03T13:40:33.225Z

        city:
          type: string
          example: Paris

        previewImage:
          type: string
          example: offer.jpg

        images:
          type: array
          items:
            type: string
          example: [ offer1.jpg, offer2.jpg, offer3.jpg, offer4.jpg, offer5.jpg, offer6.jpg ]

        isPremium:
          type: boolean
          example: false

        type:
          type: string
          example: house

        bedrooms:
          type: number
          example: 5

        maxAdults:
          type: number
          example: 5

        price:
          type: number
          example: 500

        goods:
          type: array
          items:
            type: string
          example: [ Laptop, Washer, Fridge ]

        location:
          type: object
          properties:
            latitude:
              type: number
              example: 49.87262

            longitude:
              type: number
              example: 5.314119

    errorNotFound:
      type: object
      properties:
        errorType:
          type: string
          example: 'COMMON_ERROR'

        message:
          type: string
          example: 'Not found'

    comment:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425e1
        text:
          type: string
          example: Very cool
        createdDate:
          type: string
          example: 2023-10-03T13:40:33.225Z
        rating:
          type: number
          example: 5
        authorId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    commentCreation:
      type: object
      properties:
        offerId:
          type: string
          example: 6329c3d6a04ab1061c6425e1

        text:
          type: string
          example: Very cool

        rating:
          type: number
          example: 5

    changeFavorite:
      type: object
      properties:
        offerId:
          type: string
          example: 6329c3d6a04ab1061c6425e1
